{"version":3,"sources":["webpack://ssta/./src/buoyviz/41364653f34651d0@321.js"],"names":["_1","md","_2","_i","Scrubber","numbers","_numbers","Array","from","length","_","i","_5","_6","_7","_autoplay","_9","autoplay","_loop","_Num","loop","_12","$0","update","_13","_14","alternate","_delay","_16","delay","_loopDelay","_18","initial","loopDelay","_format","_dates","date","Date","setDate","_date","dates","format","toLocaleString","month","day","_22","_23","_24","_style","html","_Scrubber","Inputs","values","value","form","frame","timer","interval","direction","start","b","classList","add","requestAnimationFrame","tick","setInterval","stop","remove","cancelAnimationFrame","clearTimeout","clearInterval","running","valueAsNumber","NaN","setTimeout","step","dispatchEvent","CustomEvent","bubbles","oninput","event","isTrusted","o","onclick","disposal","then","define","runtime","observer","main","module","variable","G","input"],"mappings":"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","file":"bundle.3537120b63d169ba725a.js","sourcesContent":["// https://observablehq.com/@mbrownshoes/stylized-scrubber@321\nfunction _1(md){return(\nmd`# Stylized Scrubber\n\n\nThis reusable input is intended to drive animations while providing the reader interactive control on demand: the animation pauses when the user interacts with the slider, but can be resumed by clicking the play button. For examples, see [Bar Chart Race](/@mbostock/bar-chart-race-with-scrubber), [The Wealth & Health of Nations](/@mbostock/the-wealth-health-of-nations), [Solar Path](/@mbostock/solar-path), or [Animated Treemap](/@d3/animated-treemap).`\n)}\n\nfunction _2(md){return(\nmd`To use in your notebook:\n\n~~~js\nimport {Scrubber} from \"@mbostock/scrubber\"\n~~~\n`\n)}\n\nfunction _i(Scrubber,numbers){return(\nScrubber(numbers)\n)}\n\nfunction _numbers(){return(\nArray.from({ length: 20000 }, (_, i) => i)\n)}\n\nfunction _5(md,i){return(\nmd`The current value of *i* is ${i}.`\n)}\n\nfunction _6(md){return(\nmd`Given an array of *values* representing the discrete frames of the animation, such as an array of numbers or dates, Scrubber returns a [view-compatible input](/@observablehq/introduction-to-views). (It uses the [disposal promise](/@mbostock/disposal) to stop the animation automatically on invalidation.)`\n)}\n\nfunction _7(md){return(\nmd`## Options\n\nScrubber has several options which you can pass as the second argument.`\n)}\n\nfunction _autoplay(md){return(\nmd`The *autoplay* option, which defaults to true, specifies whether the animation plays automatically. Set it to false to require the reader to click on the play button.`\n)}\n\nfunction _9(Scrubber,numbers){return(\nScrubber(numbers, {autoplay: false})\n)}\n\nfunction _loop(md){return(\nmd`The *loop* option, which defaults to true, specifies whether the animation should automatically restart from the beginning after the end is reached. Set it to false to require the reader to click the play button to restart the animation after it ends.`\n)}\n\nfunction _Num(Scrubber,numbers){return(\nScrubber(numbers, { loop: false })\n)}\n\nfunction _12($0){return(\n$0.update(3)\n)}\n\nfunction _13(md){return(\nmd`The *alternate* option, which defaults to false, specifies whether the animation should reverse direction when it reaches the end, rather than repeat from the start.`\n)}\n\nfunction _14(Scrubber,numbers){return(\nScrubber(numbers, {loop: false, alternate: true})\n)}\n\nfunction _delay(md){return(\nmd`The *delay* option, which defaults to null, specifies how long to wait between frames in milliseconds. A null value means to use [requestAnimationFrame](https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame), which typically means sixty times per second (about 17ms). Non-null delays use [setInterval](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setInterval).`\n)}\n\nfunction _16(Scrubber){return(\nScrubber([\"red\", \"green\", \"blue\"], {delay: 1000})\n)}\n\nfunction _loopDelay(md){return(\nmd`The *loopDelay* option, which defaults to 0, specifies how long to wait before looping in milliseconds. This can be paired with the *initial* option to show the ending value before the animation starts anew from the beginning.`\n)}\n\nfunction _18(Scrubber,numbers){return(\nScrubber(numbers, {initial: numbers.length - 1, loopDelay: 1000})\n)}\n\nfunction _format(md){return(\nmd`The *format* option, which defaults to the identity function, specifies how to display the currently-selected value. The *format* function is passed the current value, the current (zero-based) index, and the values array.`\n)}\n\nfunction _dates(){return(\nArray.from({length: 365}, (_, i) => {\n  const date = new Date(2019, 0, 1);\n  date.setDate(i + 1);\n  return date;\n})\n)}\n\nfunction _date(Scrubber,dates){return(\nScrubber(dates, {\n  autoplay: false,\n  loop: false,\n  format: (date) => date.toLocaleString(\"en\", { month: \"long\", day: \"numeric\" })\n})\n)}\n\nfunction _22(date){return(\ndate\n)}\n\nfunction _23(md){return(\nmd`If you have suggestions for other options youâ€™d like to see, please let me know!`\n)}\n\nfunction _24(md){return(\nmd`---\n\n## Implementation`\n)}\n\nfunction _style(html){return(\nhtml`\n<style>\n  .button {\n  border: 0;\n  background: transparent;\n  box-sizing: border-box;\n  width: 100;\n  height: 74px;\n  border-color: transparent transparent transparent #202020;\n  transition: 100ms all ease;\n  cursor: pointer;\n  border-style: solid;\n  border-width: 37px 0 37px 60px;\naccent-color:pink\n}\n.paused {\n  border-style: double;\n  border-width: 0px 0 0px 60px;\n}\n.button:hover {\n  border-color: transparent transparent transparent #404040;\n}\ninput{\n accent-color:white\n}\n\n  </style>\n`\n)}\n\nfunction _Scrubber(html,Inputs){return(\nfunction Scrubber(\n  values,\n  {\n    format = (value) => value,\n    initial = 0,\n    delay = null,\n    autoplay = true,\n    loop = true,\n    loopDelay = null,\n    alternate = false\n  } = {}\n) {\n  values = Array.from(values);\n  const form = html`<form style=\"font: 12px var(--sans-serif); font-variant-numeric: tabular-nums; display: flex; height: 50px; align-items: center;\">\n  <button name=b class=button  type=button ></button>\n  <label style=\"display: flex; align-items: center;\">\n    <input name=i type=range min=0 max=${\n      values.length - 1\n    } value=${initial} step=1 style=\"width: 0px;\">\n    <output name=o style=\"margin-left: 0.4em;\"></output>\n  </label>\n</form>`;\n  let frame = null;\n  let timer = null;\n  let interval = null;\n  let direction = 1;\n  function start() {\n    // form.b.textContent = \"Pause\";\n    form.b.classList.add(\"paused\");\n    if (delay === null) frame = requestAnimationFrame(tick);\n    else interval = setInterval(tick, delay);\n  }\n  function stop() {\n    // form.b.textContent = \"Play\";\n    form.b.classList.remove(\"paused\");\n    if (frame !== null) cancelAnimationFrame(frame), (frame = null);\n    if (timer !== null) clearTimeout(timer), (timer = null);\n    if (interval !== null) clearInterval(interval), (interval = null);\n  }\n  function running() {\n    return frame !== null || timer !== null || interval !== null;\n  }\n  function tick() {\n    if (\n      form.i.valueAsNumber ===\n      (direction > 0 ? values.length - 1 : direction < 0 ? 0 : NaN)\n    ) {\n      if (!loop) return stop();\n      if (alternate) direction = -direction;\n      if (loopDelay !== null) {\n        if (frame !== null) cancelAnimationFrame(frame), (frame = null);\n        if (interval !== null) clearInterval(interval), (interval = null);\n        timer = setTimeout(() => (step(), start()), loopDelay);\n        return;\n      }\n    }\n    if (delay === null) frame = requestAnimationFrame(tick);\n    step();\n  }\n  function step() {\n    form.i.valueAsNumber =\n      (form.i.valueAsNumber + direction + values.length) % values.length;\n    form.i.dispatchEvent(new CustomEvent(\"input\", { bubbles: true }));\n  }\n  form.i.oninput = (event) => {\n    if (event && event.isTrusted && running()) stop();\n    form.value = values[form.i.valueAsNumber];\n    form.o.value = format(form.value, form.i.valueAsNumber, values);\n  };\n  form.b.onclick = () => {\n    // console.log(form.b.className);\n    if (running()) return stop();\n\n    // console.log(form.b.className);\n    // form.b.toggleClass(\"paused\");\n\n    direction =\n      alternate && form.i.valueAsNumber === values.length - 1 ? -1 : 1;\n    form.i.valueAsNumber = (form.i.valueAsNumber + direction) % values.length;\n    form.i.dispatchEvent(new CustomEvent(\"input\", { bubbles: true }));\n    start();\n  };\n  form.i.oninput();\n  if (autoplay) start();\n  else stop();\n  Inputs.disposal(form).then(stop);\n  return form;\n}\n)}\n\nexport default function define(runtime, observer) {\n  const main = runtime.module();\n  main.variable(observer()).define([\"md\"], _1);\n  main.variable(observer()).define([\"md\"], _2);\n  main.variable(observer(\"viewof i\")).define(\"viewof i\", [\"Scrubber\",\"numbers\"], _i);\n  main.variable(observer(\"i\")).define(\"i\", [\"Generators\", \"viewof i\"], (G, _) => G.input(_));\n  main.variable(observer(\"numbers\")).define(\"numbers\", _numbers);\n  main.variable(observer()).define([\"md\",\"i\"], _5);\n  main.variable(observer()).define([\"md\"], _6);\n  main.variable(observer()).define([\"md\"], _7);\n  main.variable(observer(\"autoplay\")).define(\"autoplay\", [\"md\"], _autoplay);\n  main.variable(observer()).define([\"Scrubber\",\"numbers\"], _9);\n  main.variable(observer(\"loop\")).define(\"loop\", [\"md\"], _loop);\n  main.variable(observer(\"viewof Num\")).define(\"viewof Num\", [\"Scrubber\",\"numbers\"], _Num);\n  main.variable(observer(\"Num\")).define(\"Num\", [\"Generators\", \"viewof Num\"], (G, _) => G.input(_));\n  main.variable(observer()).define([\"viewof Num\"], _12);\n  main.variable(observer()).define([\"md\"], _13);\n  main.variable(observer()).define([\"Scrubber\",\"numbers\"], _14);\n  main.variable(observer(\"delay\")).define(\"delay\", [\"md\"], _delay);\n  main.variable(observer()).define([\"Scrubber\"], _16);\n  main.variable(observer(\"loopDelay\")).define(\"loopDelay\", [\"md\"], _loopDelay);\n  main.variable(observer()).define([\"Scrubber\",\"numbers\"], _18);\n  main.variable(observer(\"format\")).define(\"format\", [\"md\"], _format);\n  main.variable(observer(\"dates\")).define(\"dates\", _dates);\n  main.variable(observer(\"viewof date\")).define(\"viewof date\", [\"Scrubber\",\"dates\"], _date);\n  main.variable(observer(\"date\")).define(\"date\", [\"Generators\", \"viewof date\"], (G, _) => G.input(_));\n  main.variable(observer()).define([\"date\"], _22);\n  main.variable(observer()).define([\"md\"], _23);\n  main.variable(observer()).define([\"md\"], _24);\n  main.variable(observer(\"style\")).define(\"style\", [\"html\"], _style);\n  main.variable(observer(\"Scrubber\")).define(\"Scrubber\", [\"html\",\"Inputs\"], _Scrubber);\n  return main;\n}\n"],"sourceRoot":""}